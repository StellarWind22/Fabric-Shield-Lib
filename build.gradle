plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven {url = "https://minecraft.guntram.de/maven/"}
	maven { url = "https://jitpack.io" }
	maven { url = "https://maven.shedaniel.me/" }
	maven { url "https://maven.terraformersmc.com/releases/"}
	maven {url = "https://api.modrinth.com/maven"}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	//Mod Menu
	modCompileOnly modRuntimeOnly ("com.terraformersmc:modmenu:${project.mod_menu_version}"), {
		exclude(group: "net.fabricmc.fabric-api")
	}

	//Fabric ASM
	modImplementation("com.github.Chocohead:Fabric-ASM:v2.3") {
		exclude (group: "net.fabricmc.fabric-api")
	}
	include "com.github.Chocohead:Fabric-ASM:v2.3"

	modImplementation "maven.modrinth:midnightlib:${project.midnightlib_version}"
	include "maven.modrinth:midnightlib:${project.midnightlib_version}"
}

loom {
	accessWidenerPath = file("src/main/resources/fabricshieldlib.accesswidener")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	it.options.release = 17
}

java {
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			artifact(remapJar) {
				builtBy remapJar
			}
			artifact(sourcesJar) {
				builtBy remapSourcesJar
			}
		}
	}
	repositories {
	}
}
